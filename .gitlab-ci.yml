###################################################################
# https://meigit.readthedocs.io/en/latest/gitlab_ci_.gitlab-ci.yml_detail.html
# 3个阶段
###################################################################
 
stages:
  - debug   # Debug 打印所有的变量
  #- prepare # 准备工作
  - build # Docker build 准备镜像 上传镜像
  #- test # 测试工作
  - deploy  # 使用镜像部署新的容器
 
#########################################################
# 创建环境变量，包括
# - 在K8s创建时候使用Namespace，Namespace需要系统管理员提前创建好
# - TAG_HARBOR_REGISTORY_REPO是后期上传到harbor的路径的名称
#########################################################  
# 全局变量，用于Jobs
variables:  
  TAG_HARBOR_REGISTORY_REPO: ${HARBOR_REGISTRY_IMAGE}/${CI_PROJECT_NAME}
  #K8S_NAMESPACE: my-app-ns

 
#########################################################
# Debug，为了打印出所有变量，可以忽略
#########################################################
# Jobs#
1-print-all-env-vars-job:
  image: docker:latest
  stage: debug
  services:
    - docker:dind
  script:
    - echo "GitLab CI/CD | Print all environment variables"
    - env
  tags:
    - changw-runner
# 只在下述条件下触发
  only:
  #  - main
    #- tags
# 表示以 ara-开始的标签，例如ara-v1.0
    - /^ara-.*$/
# 表示以 vela-开始的标签，例如vela-v1.0
    #- /^vela-.*$/
 
#########################################################
# Build Docker镜像
# 包括4部分，登录Harbor，编辑Dockerfile，编译，上传
#########################################################  
2-build-docker-image-job:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  tags:
    - changw-runner
  before_script:
# 登录到harbor
    - docker login -u $HARBOR_USER -p $HARBOR_PASSWORD $HARBOR_URL
  script:
# 修改Dockerfile
    - sed -i 's/___name___/'"${CI_PROJECT_TITLE}"'/g' Dockerfile   
    - sed -i 's/___version___/'"${CI_COMMIT_TAG}"'/g' Dockerfile
# Build Docker Image
    - docker build -t ${TAG_HARBOR_REGISTORY_REPO}:latest .
    - docker tag ${TAG_HARBOR_REGISTORY_REPO}:latest ${TAG_HARBOR_REGISTORY_REPO}:${CI_COMMIT_TAG}

# 上传镜像
    - docker push ${TAG_HARBOR_REGISTORY_REPO}:${CI_COMMIT_TAG}
    - docker push ${TAG_HARBOR_REGISTORY_REPO}:latest
  only:
    #- main
    - tags 
    #- /^ara-.*$/
    #- /^vela-.*$/
 
#########################################################
# 把APP部署在K8S集群上
# 其中before_script的内容就把kubeconfig的变量导入到操作环境中
#########################################################
# Deploy the APP on K8s
4-deploy-container-on-k8s-job:
  image: aliartiza75/kubectl:0.0.2
  stage: deploy
  tags:
    - changw-runner
# COPY KUBECONFIG 
  before_script:
    - mkdir ~/.kube/
    - echo $KUBECONFIG | base64 -d > config
    - mv config ~/.kube/
  script:
# 配置时间变量
     - seconds=$(date +%s)
     - seconds_new=$(expr $seconds + 28800)
     - date_new=$(date -d @$seconds_new +%Y-%m-%d_%H:%M:%S)
    # - echo ${TAG_HARBOR_REGISTORY_REPO}:latest
# Modify Deployment YMAL file
     - sed -i 's/___deployment_name___/'"${CI_PROJECT_TITLE}"'-deployment/g' manifests/Deployment.yaml 
     - sed -i 's/___project___/'"${CI_PROJECT_TITLE}"'/g' manifests/Deployment.yaml 
     - sed -i 's/___date___/'$date_new'/g' manifests/Deployment.yaml
     - sed -i 's/___version___/'"${CI_COMMIT_TAG}"'/g' manifests/Deployment.yaml
     - sed -i 's/___author___/Chang\ WANG/g' manifests/Deployment.yaml
# 由于替换的内容包含"/"，因此这里使用"|"
     - sed -i 's|___image___|'"${TAG_HARBOR_REGISTORY_REPO}"':latest|g' manifests/Deployment.yaml
    # - cat manifests/Deployment.yaml|grep -E 'image|version|author|date|project|name'
# Modify Server YMAL file
     - sed -i 's/___service_name___/'"${CI_PROJECT_TITLE}"'-service/g' manifests/Service.yaml 
     - sed -i 's/___project___/'"${CI_PROJECT_TITLE}"'/g' manifests/Service.yaml 
     - sed -i 's/___date___/'$date_new'/g' manifests/Service.yaml
     - sed -i 's/___version___/'"${CI_COMMIT_TAG}"'/g' manifests/Service.yaml
     - sed -i 's/___author___/Chang\ WANG/g' manifests/Service.yaml
# NS需要提前准备好，因此这次不需要创建NS
     #- kubectl create ns ${K8S_NAMESPACE}
# Deploy the Deployment
     - kubectl get pod
     #- kubectl apply -f manifests/Deployment.yaml -n ${K8S_NAMESPACE}
     #- kubectl apply -f manifests/Deployment.yaml
     #- kubectl annotate deployment ${CI_PROJECT_TITLE}-deployment kubernetes.io/change-cause="Update ${CI_COMMIT_TAG}"
# Deploy the Service 
     #- kubectl apply -f manifests/Service.yaml
# Check Status
    # - kubectl get namespaces
    # - kubectl get all -n ${K8S_NAMESPACE}
     #- kubectl get all

  only:
  #  - main
    - tags
# 如果TAG是ara-开头，就触发动作
  #  - /^ara-.*$/